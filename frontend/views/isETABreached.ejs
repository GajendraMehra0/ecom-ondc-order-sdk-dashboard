<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Check ETA Breach</title>
  <style>
    * {
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f9f9f9;
      color: #333;
      margin: 0;
      padding: 40px 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    h1 {
      color: #222;
      margin-bottom: 10px;
    }

    p {
      font-size: 16px;
      margin-bottom: 10px;
    }

    textarea {
      width: 100%;
      max-width: 800px;
      height: 300px;
      padding: 12px;
      font-family: 'Courier New', Courier, monospace;
      font-size: 14px;
      border: 1px solid #ccc;
      border-radius: 8px;
      background-color: #fff;
      resize: vertical;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }

    button {
      margin-top: 20px;
      padding: 12px 24px;
      background-color: #007BFF;
      color: white;
      border: none;
      border-radius: 6px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #0056b3;
    }

    #result {
      margin-top: 30px;
      font-size: 18px;
      font-weight: bold;
    }

    .success {
      color: #28a745;
    }

    .failure {
      color: #dc3545;
    }

    @media (max-width: 600px) {
      textarea {
        height: 250px;
      }

      button {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <h1>Check ETA Breach</h1>

  <p>Paste your JSON payload below:</p>
  <textarea id="jsonInput">
{
  "createdAt": "2025-05-12T10:00:00Z",
  "domain": "ONDC:RET10",
  "fulfillments": [
    {
      "type": "Delivery",
      "@ondc/org/TAT": "PT1H30M",
      "state": {
        "descriptor": {
          "code": "Order-picked-up"
        }
      }
    }
  ]
}
  </textarea>

  <button onclick="checkETABreach()">Check</button>

  <div id="result"></div>

  <script>
    // Define the function to calculate ETA breach
    const isETABreached = (data) => {
      if (!data || typeof data !== "object" || Array.isArray(data)) {
        return false;
      }

      if (!data.fulfillments || !Array.isArray(data.fulfillments)) {
        return false;
      }

      const deliveryFulfillment = data?.fulfillments?.find(
        (fulfillment) => fulfillment?.type === "Delivery"
      );
      if (!deliveryFulfillment || !deliveryFulfillment["@ondc/org/TAT"]) {
        return false;
      }

      const createdAt = new Date(data.createdAt);
      const deliveryTime = isoDurationToMilliseconds(deliveryFulfillment["@ondc/org/TAT"]);
      const deliveryETA = new Date(createdAt.getTime() + deliveryTime);

      const currentTime = new Date();
      return currentTime >= deliveryETA;
    };

    // Convert ISO duration to milliseconds
    function isoDurationToMilliseconds(iso) {
      const regex = /P(?:(\d+)D)?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?)?/;
      const match = iso.match(regex);

      if (!match) return 0;

      const days = parseInt(match[1] || "0", 10);
      const hours = parseInt(match[2] || "0", 10);
      const minutes = parseInt(match[3] || "0", 10);
      const seconds = parseInt(match[4] || "0", 10);

      return (((days * 24 + hours) * 60 + minutes) * 60 + seconds) * 1000;
    }

    function checkETABreach() {
      const input = document.getElementById("jsonInput").value;
      let data;

      try {
        data = JSON.parse(input);
      } catch (err) {
        document.getElementById("result").innerText = "❌ Invalid JSON format.";
        return;
      }

      const result = isETABreached(data);
      document.getElementById("result").innerText = result
        ? "✅ ETA Breached"
        : "❌ ETA Not Breached";
      document.getElementById("result").className = result ? "success" : "failure";
    }
  </script>
</body>
</html>
