<!DOCTYPE html>
<html>
<head>
  <title>Check Order Cancellable</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    label { display: block; margin-top: 10px; }
    button { margin-top: 20px; }
  </style>
</head>
<body>
  <h1>Check if Order is Cancellable</h1>

  <form id="cancellableForm">
    <label for="state">Delivery Fulfillment State:</label>
    <select id="state" name="state">
      <option value="Order-delivered">Order-delivered</option>
      <option value="Order-picked-up">Order-picked-up</option>
      <option value="Order-confirmed">Order-confirmed</option>
      <option value="Order-placed">Order-placed</option>
    </select>

    <label>Confirmed Items - Set cancellable status:</label>
    <div id="itemsContainer">
      <div>
        Item 1:
        <select name="itemCancellable">
          <option value="true">Cancellable</option>
          <option value="false">Not Cancellable</option>
        </select>
      </div>
      <div>
        Item 2:
        <select name="itemCancellable">
          <option value="true">Cancellable</option>
          <option value="false">Not Cancellable</option>
        </select>
      </div>
    </div>

    <button type="submit">Check</button>
  </form>

  <h2 id="result"></h2>

  <script>
    const notCancellableState = ["Order-delivered", "Order-picked-up"];

    const isCancellable = (data) => {
      if (!data || typeof data !== "object" || Array.isArray(data)) {
        return false;
      }

      if (!data.confirmedItems || !Array.isArray(data.confirmedItems)) {
        return false;
      }

      if (data.confirmedItems.length === 0) {
        return false;
      }

      const deliveryFulfillment = data?.fulfillments?.find(
        (fulfillment) => fulfillment?.type === "Delivery"
      );
      if (notCancellableState.includes(deliveryFulfillment?.state?.descriptor?.code)) {
        return false;
      }

      return data.confirmedItems.every((item) => {
        if (!item || typeof item !== "object" || Array.isArray(item)) {
          return false;
        }

        if (
          !item.product ||
          typeof item.product !== "object" ||
          Array.isArray(item.product)
        ) {
          return false;
        }

        return item.product["@ondc/org/cancellable"] === true;
      });
    };

    document.getElementById('cancellableForm').addEventListener('submit', function (e) {
      e.preventDefault();
      const state = document.getElementById('state').value;
      const selects = document.getElementsByName('itemCancellable');

      const confirmedItems = Array.from(selects).map(select => ({
        product: {
          "@ondc/org/cancellable": select.value === "true"
        }
      }));

      const data = {
        fulfillments: [
          {
            type: "Delivery",
            state: {
              descriptor: {
                code: state
              }
            }
          }
        ],
        confirmedItems
      };

      const result = isCancellable(data);
      document.getElementById('result').innerText = result
        ? "✅ The order is cancellable"
        : "❌ The order is NOT cancellable";
    });
  </script>
</body>
</html>
