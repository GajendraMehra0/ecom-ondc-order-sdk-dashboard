<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Refund Calculation</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      /* Navbar */
      .custom-navbar {
        background-color: #ffffff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 1000;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 30px;
      }

      .navbar-brand,
      .custom-navbar .navbar-brand {
        color: #0056b3 !important;
        font-weight: 600;
        font-size: 1.5rem;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .custom-navbar .navbar-brand img,
      .brand-logo {
        height: 50px;
        object-fit: contain;
      }

      .navbar-nav,
      .custom-navbar .navbar-nav {
        display: flex;
        gap: 20px;
        list-style: none;
        margin: 0;
        padding: 0;
      }

      .navbar-nav .nav-link,
      .custom-navbar .navbar-nav .nav-link {
        color: #0056b3 !important;
        font-weight: 500;
        text-decoration: none;
        padding: 8px 15px;
        border-radius: 5px;
        transition: all 0.3s ease;
      }

      .navbar-nav .nav-link:hover,
      .custom-navbar .navbar-nav .nav-link:hover {
        color: #ffffff !important;
        background-color: #007bff;
      }

      @media (max-width: 600px) {
        .custom-navbar .navbar-nav .nav-link {
          padding: 10px;
          margin: 0;
        }

        .custom-navbar .navbar-brand img {
          height: 40px;
        }
      }

      /* Global Reset */
      * {
        box-sizing: border-box;
      }

      /* Body & Layout */
      body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          Oxygen, Ubuntu, Cantarell, sans-serif;
        margin: 0;
        padding: 40px 20px;
        padding-top: 100px; /* For fixed navbar */
        background: #f9f9f9;
        color: #1a1a1a;
      }

      /* Typography */
      h1 {
        text-align: center;
        font-family: "Times New Roman", Times, serif;
        font-size: 30px;
        font-weight: 600;
        margin-bottom: 20px;
        color: #000000;
      }

      /* Form Container */
      form {
        max-width: 600px;
        margin: auto;
        background: #ffffff;
        padding: 24px;
        border-radius: 8px;
        border: 1px solid #e5e7eb;
        border-left: 4px solid #4299e1;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
      }

      /* Form Elements */
      label {
        display: block;
        margin-top: 16px;
        font-size: 14px;
        font-weight: 500;
        color: #2d3748;
      }

      select,
      textarea {
        width: 100%;
        padding: 8px 12px;
        margin-top: 6px;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        font-size: 14px;
        background-color: #f7fafc;
        background-repeat: no-repeat;
        background-position: right 8px center;
        background-size: 12px;
        transition: border-color 0.2s ease, background-color 0.2s ease;
        box-sizing: border-box;
        appearance: none;
      }

      select {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='292.4' height='292.4'%3E%3Cpath fill='%232d3748' d='M287 69.4a17.6 17.6 0 00-13-5.4H18.4a17.6 17.6 0 00-12.9 5.4A17.6 17.6 0 000 82.2c0 5 1.8 9.3 5.4 12.9l128 127.9c3.6 3.6 7.8 5.4 12.8 5.4s9.2-1.8 12.8-5.4L287 95a17.6 17.6 0 000-25.6z'/%3E%3C/svg%3E");
      }

      select:focus,
      textarea:focus {
        outline: 2px solid #4299e1;
        outline-offset: 2px;
        border-color: #4299e1;
        box-shadow: 0 0 0 2px rgba(66, 153, 225, 0.2);
      }

      select:hover,
      textarea:hover {
        border-color: #a0aec0;
      }

      textarea {
        resize: vertical;
        min-height: 80px;
        font-family: "Courier New", Courier, monospace;
      }

      /* Toggle Switch */
      .toggle-container {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-top: 6px;
      }

      .toggle-label {
        font-size: 14px;
        font-weight: 500;
        color: #2d3748;
      }

      .toggle-switch {
        position: relative;
        display: inline-block;
        width: 40px;
        height: 20px;
        cursor: pointer;
      }

      .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
      }

      .slider {
        position: absolute;
        cursor: pointer;
        inset: 0;
        background-color: #e2e8f0;
        border-radius: 20px;
        transition: 0.4s;
      }

      .slider:before {
        position: absolute;
        content: "";
        height: 16px;
        width: 16px;
        left: 2px;
        bottom: 2px;
        background-color: white;
        border-radius: 50%;
        transition: 0.4s;
      }

      input:checked + .slider {
        background-color: #68d391;
      }

      input:checked + .slider:before {
        transform: translateX(20px);
      }

      /* Buttons */
      .button-container {
        display: flex;
        justify-content: flex-end;
        gap: 8px;
        margin-top: 24px;
      }

      button {
        padding: 8px 16px;
        font-size: 14px;
        font-weight: 500;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        transition: background-color 0.2s ease;
      }

      button[type="reset"] {
        background-color: #edf2f7;
        color: #4a5568;
      }

      button[type="reset"]:hover {
        background-color: #e2e8f0;
      }

      button[type="submit"] {
        background-color: #4299e1;
        color: white;
      }

      button[type="submit"]:hover {
        background-color: #3182ce;
      }

      button:focus {
        outline: 2px solid #4299e1;
        outline-offset: 2px;
      }

      /* Static JSON Block */
      .static-json {
        margin-top: 10px;
        font-size: 12px;
        background-color: #f1f5f9;
        padding: 10px;
        border: 1px dashed #cbd5e0; /* Fixed border color */
        border-radius: 6px;
        white-space: pre-wrap;
        word-break: break-word;
      }

      /* Details */
      details summary {
        cursor: pointer;
        margin-top: 10px;
        font-weight: 500;
        color: #2c5282;
      }

      /* Modal */
      .modal {
        display: none;
        position: fixed;
        inset: 0;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
        z-index: 1000;
      }

      .modal.show {
        display: flex;
      }

      .modal-content {
        background-color: #ffffff;
        padding: 24px;
        border-radius: 8px;
        border-left: 4px solid #68d391;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 90%;
        position: relative;
        animation: fadeIn 0.3s ease-in-out;
      }

      .modal-content.error {
        border-left: 4px solid #f56565;
      }

      .modal-content h2 {
        margin: 0 0 16px;
        font-size: 16px;
        font-weight: 500;
        color: #2f855a;
      }

      .modal-content h3 {
        margin: 0 0 16px;
        font-size: 16px;
        font-weight: 500;
        color: #9b2c2c;
      }

      .modal-content pre {
        background-color: #f1f5f9;
        padding: 12px;
        border-radius: 6px;
        font-family: "Courier New", Courier, monospace;
        font-size: 14px;
        white-space: pre-wrap;
        word-break: break-word;
        max-height: 300px;
        overflow-y: auto;
      }

      @keyframes fadeIn {
        from {
          transform: scale(0.9);
          opacity: 0;
        }
        to {
          transform: scale(1);
          opacity: 1;
        }
      }

      .close-btn {
        position: absolute;
        top: 12px;
        right: 12px;
        background: #edf2f7;
        color: #000000;
        border: none;
        border-radius: 4px;
        padding: 4px 8px;
        cursor: pointer;
        font-size: 14px;
      }

      .close-btn:hover {
        background-color: #e2e8f0;
      }

      /* Brand logo */
      .brand-logo {
        height: 100%;
        max-width: 100%;
        object-fit: contain;
      }

      /* Responsive tweaks */
      @media (max-width: 768px) {
        body {
          padding: 80px 12px;
        }

        form {
          padding: 16px;
          border-left: 3px solid #4299e1;
        }

        h1 {
          font-size: 18px;
        }

        .button-container {
          flex-direction: column;
          gap: 12px;
          align-items: stretch;
        }

        button {
          width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <nav class="custom-navbar navbar navbar-expand-lg fixed-top">
      <div class="container-fluid">
        <a class="navbar-brand" href="/">
          <img
            src="https://ondc.org/assets/ondc-buyer-apps/images/digihaat.png"
            class="brand-logo"
            alt="DigiHaat Logo"
          />
        </a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
          aria-controls="navbarNav"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link" href="/isCancellable">Cancel Request</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/refund">Refund Request</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/eta-check">ETA-Breached</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <h1>CHECK YOUR REFUND AMOUNT</h1>
    <form action="/refund" method="POST" id="refundForm">
      <label
        >Actor *
        <select name="actor" required>
          <option value="">Select...</option>
          <option value="Buyer">Buyer</option>
          <option value="Seller">Seller</option>
        </select>
      </label>

      <label
        >Action Type *
        <select name="actionType" required>
          <option value="">Select...</option>
          <option value="full">Full</option>
          <option value="partial">Partial</option>
        </select>
      </label>

      <label
        >Action *
        <select name="action" required>
          <option value="">Select...</option>
          <option value="return">Return</option>
          <option value="cancellation">Cancellation</option>
        </select>
      </label>

      <label
        >Is ETA Breached *
        <div class="toggle-container">
          <span class="toggle-label">False</span>
          <label class="toggle-switch">
            <input type="checkbox" name="isETABreached" value="true" />
            <span class="slider"></span>
          </label>
          <span class="toggle-label">True</span>
        </div>
      </label>

      <label
        >Charge Payload (JSON) *
        <textarea
          name="charge"
          rows="6"
          placeholder="Paste or edit your JSON here..."
          required
        >
        </textarea>
      </label>

      <label
        >on_cancelPayload (JSON) *
        <textarea
          name="on_cancelPayload"
          rows="20"
          placeholder="Paste or edit your JSON here..."
          required
        >
        </textarea>
      </label>

      <label
        >refund FL (JSON) *
        <textarea
          name="refundFL"
          rows="20"
          placeholder="Paste or edit your JSON here..."
          required
        >
[]
        </textarea>
      </label>

      <div class="button-container">
        <button type="button" onclick="resetForm()">Reset</button>
        <button type="submit">Calculate Refund</button>
      </div>
    </form>

    <!-- Modal for Result -->
    <div class="modal" id="resultModal">
      <div class="modal-content">
        <button class="close-btn" onclick="closeModal()">Close</button>
        <h2>Refund Details</h2>
        <pre id="refundResult"></pre>
      </div>
    </div>
    <!-- Modal for Error -->
    <div class="modal" id="errorModal">
      <div class="modal-content error">
        <button class="close-btn" onclick="closeModal()">Close</button>
        <h3 id="errorMessage"></h3>
      </div>
    </div>

    <script>
      function closeModal() {
        console.log('Closing modal');
        document.querySelectorAll('.modal').forEach((modal) => {
          modal.style.display = 'none';
        });
      }

      window.onclick = function (event) {
        document.querySelectorAll('.modal').forEach((modal) => {
          if (event.target === modal) {
            console.log('Modal closed by clicking outside');
            modal.style.display = 'none';
          }
        });
      };

      function resetForm() {
        console.log('Resetting form');
        document.getElementById('refundForm').reset();
        document.getElementById('resultModal').style.display = 'none';
        document.getElementById('errorModal').style.display = 'none';
        localStorage.removeItem('formData');
        localStorage.removeItem('refundResult');
        localStorage.removeItem('errorMessage');
        console.log('Form data and localStorage cleared');
      }

      // Save form data to localStorage on input change
      document.getElementById('refundForm').addEventListener('input', function () {
        console.log('Form input changed, saving to localStorage');
        const formData = {
          actor: document.querySelector("select[name='actor']").value,
          actionType: document.querySelector("select[name='actionType']").value,
          action: document.querySelector("select[name='action']").value,
          isETABreached: document.querySelector("input[name='isETABreached']").checked,
          charge: document.querySelector("textarea[name='charge']").value,
          on_cancelPayload: document.querySelector("textarea[name='on_cancelPayload']").value,
          refundFL: document.querySelector("textarea[name='refundFL']").value,
        };
        localStorage.setItem('formData', JSON.stringify(formData));
        console.log('Form data saved to localStorage:', formData);
      });

      // Validate JSON string
      function isValidJSON(str) {
        try {
          JSON.parse(str);
          return true;
        } catch {
          return false;
        }
      }

      // Handle form submission
      document.getElementById('refundForm').addEventListener('submit', async function (event) {
        event.preventDefault();
        console.log('Form submitted');

        const formData = {
          actor: document.querySelector("select[name='actor']").value,
          actionType: document.querySelector("select[name='actionType']").value,
          action: document.querySelector("select[name='action']").value,
          isETABreached: document.querySelector("input[name='isETABreached']").checked,
          charge: document.querySelector("textarea[name='charge']").value.trim(),
          on_cancelPayload: document.querySelector("textarea[name='on_cancelPayload']").value.trim(),
          refundFL: document.querySelector("textarea[name='refundFL']").value.trim(),
        };

        console.log('Collected form data:', formData);

        try {
          // Validate JSON fields
          console.log('Validating JSON inputs');
          if (!isValidJSON(formData.charge)) {
            throw new Error('Invalid JSON format in Charge Payload');
          }
          if (!isValidJSON(formData.on_cancelPayload)) {
            throw new Error('Invalid JSON format in on_cancelPayload');
          }
          if (!isValidJSON(formData.refundFL)) {
            throw new Error('Invalid JSON format in refundFL');
          }
          console.log('All JSON inputs are valid');

          // Send POST request to the backend
          console.log('Sending POST request to /refund');
          const response = await fetch('/refund', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData),
          });

          console.log('Received response with status:', response.status);

          if (!response.ok) {
            const errorText = await response.text();
            console.error('Server error:', response.status, errorText);
            throw new Error(`Server error: ${response.status} ${errorText}`);
          }

          const refundResult = await response.json();
          console.log('Received refund result:', refundResult);

          // Display the result in the modal
          document.getElementById('refundResult').textContent = JSON.stringify(refundResult, null, 2);
          document.getElementById('resultModal').style.display = 'flex';
          localStorage.setItem('refundResult', JSON.stringify(refundResult));
          console.log('Refund result displayed and saved to localStorage');
        } catch (error) {
          console.error('Error during form submission:', error.message);
          // Display error in the modal
          document.getElementById('errorMessage').textContent =
            error.message || 'An error occurred while communicating with the server';
          document.getElementById('errorModal').style.display = 'flex';
          localStorage.setItem('errorMessage', error.message || 'An error occurred while communicating with the server');
          console.log('Error message displayed and saved to localStorage');
        }
      });

      // Load saved data from localStorage when the page loads
      window.onload = function () {
        console.log('Page loaded, checking localStorage');
        const savedFormData = localStorage.getItem('formData');
        const savedRefundResult = localStorage.getItem('refundResult');
        const savedErrorMessage = localStorage.getItem('errorMessage');

        if (savedFormData) {
          console.log('Loading saved form data from localStorage');
          const formData = JSON.parse(savedFormData);
          document.querySelector("select[name='actor']").value = formData.actor || '';
          document.querySelector("select[name='actionType']").value = formData.actionType || '';
          document.querySelector("select[name='action']").value = formData.action || '';
          document.querySelector("input[name='isETABreached']").checked = formData.isETABreached || false;
          document.querySelector("textarea[name='charge']").value = formData.charge || '';
          document.querySelector("textarea[name='on_cancelPayload']").value = formData.on_cancelPayload || '';
          document.querySelector("textarea[name='refundFL']").value = formData.refundFL || '';
          console.log('Form data restored:', formData);
        }

        if (savedRefundResult) {
          console.log('Loading saved refund result from localStorage');
          document.getElementById('refundResult').textContent = JSON.stringify(
            JSON.parse(savedRefundResult),
            null, 2
          );
          document.getElementById('resultModal').style.display = 'flex';
          console.log('Refund result modal displayed');
        }

        if (savedErrorMessage) {
          console.log('Loading saved error message from localStorage');
          document.getElementById('errorMessage').textContent = savedErrorMessage;
          document.getElementById('errorModal').style.display = 'flex';
          console.log('Error modal displayed');
        }
      };
    </script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>